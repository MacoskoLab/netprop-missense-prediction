configfile: "config/config.yml"


import os
import re
def get_run_number():
    """Get the current run number based on existing directories."""
    if config.get("run_number", None):
        # If run_number is specified in config, use it directly
        return config["run_number"]
    # Get all directories in results
    results_dir = "results"
    if not os.path.exists(results_dir):
        return 1
    existing_runs = [d for d in os.listdir(results_dir) if re.match(r'run\d+', d)]
    
    # Extract run numbers and find the next one
    run_numbers = [int(re.search(r'\d+', d).group()) for d in existing_runs]
    next_run = max(run_numbers, default=0) + 1
    
    return next_run

def create_run_name(run_number):
    """Create a run name based on the run number and config."""
    run_name = config.get("run_name", None)
    if run_name:
        run = f"run{run_number}_{run_name}"
    else:
        run = f"run{run_number}"

    return run

run_number = get_run_number()
run = create_run_name(run_number)


include: "rules/genie3.smk"
include: "rules/perturb.smk"
include: "rules/get_am_scores.smk"

ruleorder: genie3 > get_am_scores > perturb


rule all:
    input:
        f"results/{run}/perturb/scores.tsv"
    default_target: True
